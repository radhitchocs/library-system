{"ast":null,"code":"import { gql } from '@apollo/client';\nexport const GET_BOOKS = gql`\n  query GetBooks {\n    books {\n      id\n      title\n      author\n      year\n    }\n  }\n`;\nexport const GET_BOOK = gql`\n  query GetBook($id: ID!) {\n    book(id: $id) {\n      id\n      title\n      author\n      year\n    }\n  }\n`;\nexport const GET_USERS = gql`\n  query GetUsers {\n    users {\n      id\n      name\n      email\n    }\n  }\n`;\nexport const GET_USER = gql`\n  query GetUser($id: ID!) {\n    user(id: $id) {\n      id\n      name\n      email\n    }\n  }\n`;\nexport const GET_BORROWINGS = gql`\n  query GetBorrowings {\n    borrowings {\n      id\n      user {\n        id\n        name\n      }\n      book {\n        id\n        title\n      }\n      borrowDate\n      returnDate\n    }\n  }\n`;\nexport const ADD_BOOK = gql`\n  mutation AddBook($title: String!, $author: String!, $year: Int!) {\n    addBook(title: $title, author: $author, year: $year) {\n      id\n      title\n      author\n      year\n    }\n  }\n`;\nexport const ADD_USER = gql`\n  mutation AddUser($name: String!, $email: String!) {\n    addUser(name: $name, email: $email) {\n      id\n      name\n      email\n    }\n  }\n`;\nexport const ADD_BORROWING = gql`\n  mutation AddBorrowing($userId: ID!, $bookId: ID!, $borrowDate: String!, $returnDate: String!) {\n    addBorrowing(userId: $userId, bookId: $bookId, borrowDate: $borrowDate, returnDate: $returnDate) {\n      id\n      user {\n        id\n        name\n      }\n      book {\n        id\n        title\n      }\n      borrowDate\n      returnDate\n    }\n  }\n`;\nexport const UPDATE_BOOK = gql`\n  mutation UpdateBook($id: ID!, $title: String!, $author: String!, $year: Int!) {\n    updateBook(id: $id, title: $title, author: $author, year: $year) {\n      id\n      title\n      author\n      year\n    }\n  }\n`;\nexport const UPDATE_USER = gql`\n  mutation UpdateUser($id: ID!, $name: String!, $email: String!) {\n    updateUser(id: $id, name: $name, email: $email) {\n      id\n      name\n      email\n    }\n  }\n`;\nexport const UPDATE_BORROWING = gql`\n  mutation UpdateBorrowing($id: ID!, $userId: ID!, $bookId: ID!, $borrowDate: String!, $returnDate: String!) {\n    updateBorrowing(id: $id, userId: $userId, bookId: $bookId, borrowDate: $borrowDate, returnDate: $returnDate) {\n      id\n      user {\n        id\n        name\n      }\n      book {\n        id\n        title\n      }\n      borrowDate\n      returnDate\n    }\n  }\n`;\nexport const DELETE_BOOK = gql`\n  mutation DeleteBook($id: ID!) {\n    deleteBook(id: $id) {\n      id\n    }\n  }\n`;\nexport const DELETE_USER = gql`\n  mutation DeleteUser($id: ID!) {\n    deleteUser(id: $id) {\n      id\n    }\n  }\n`;\nexport const DELETE_BORROWING = gql`\n  mutation DeleteBorrowing($id: ID!) {\n    deleteBorrowing(id: $id) {\n      id\n    }\n  }\n`;","map":{"version":3,"names":["gql","GET_BOOKS","GET_BOOK","GET_USERS","GET_USER","GET_BORROWINGS","ADD_BOOK","ADD_USER","ADD_BORROWING","UPDATE_BOOK","UPDATE_USER","UPDATE_BORROWING","DELETE_BOOK","DELETE_USER","DELETE_BORROWING"],"sources":["/home/radith/Documents/library-system/client/src/graphql/queries.js"],"sourcesContent":["import { gql } from '@apollo/client';\n\nexport const GET_BOOKS = gql`\n  query GetBooks {\n    books {\n      id\n      title\n      author\n      year\n    }\n  }\n`;\n\nexport const GET_BOOK = gql`\n  query GetBook($id: ID!) {\n    book(id: $id) {\n      id\n      title\n      author\n      year\n    }\n  }\n`;\n\nexport const GET_USERS = gql`\n  query GetUsers {\n    users {\n      id\n      name\n      email\n    }\n  }\n`;\n\nexport const GET_USER = gql`\n  query GetUser($id: ID!) {\n    user(id: $id) {\n      id\n      name\n      email\n    }\n  }\n`;\n\nexport const GET_BORROWINGS = gql`\n  query GetBorrowings {\n    borrowings {\n      id\n      user {\n        id\n        name\n      }\n      book {\n        id\n        title\n      }\n      borrowDate\n      returnDate\n    }\n  }\n`;\n\n\n\nexport const ADD_BOOK = gql`\n  mutation AddBook($title: String!, $author: String!, $year: Int!) {\n    addBook(title: $title, author: $author, year: $year) {\n      id\n      title\n      author\n      year\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation AddUser($name: String!, $email: String!) {\n    addUser(name: $name, email: $email) {\n      id\n      name\n      email\n    }\n  }\n`;\n\nexport const ADD_BORROWING = gql`\n  mutation AddBorrowing($userId: ID!, $bookId: ID!, $borrowDate: String!, $returnDate: String!) {\n    addBorrowing(userId: $userId, bookId: $bookId, borrowDate: $borrowDate, returnDate: $returnDate) {\n      id\n      user {\n        id\n        name\n      }\n      book {\n        id\n        title\n      }\n      borrowDate\n      returnDate\n    }\n  }\n`;\n\nexport const UPDATE_BOOK = gql`\n  mutation UpdateBook($id: ID!, $title: String!, $author: String!, $year: Int!) {\n    updateBook(id: $id, title: $title, author: $author, year: $year) {\n      id\n      title\n      author\n      year\n    }\n  }\n`;\n\nexport const UPDATE_USER = gql`\n  mutation UpdateUser($id: ID!, $name: String!, $email: String!) {\n    updateUser(id: $id, name: $name, email: $email) {\n      id\n      name\n      email\n    }\n  }\n`;\n\nexport const UPDATE_BORROWING = gql`\n  mutation UpdateBorrowing($id: ID!, $userId: ID!, $bookId: ID!, $borrowDate: String!, $returnDate: String!) {\n    updateBorrowing(id: $id, userId: $userId, bookId: $bookId, borrowDate: $borrowDate, returnDate: $returnDate) {\n      id\n      user {\n        id\n        name\n      }\n      book {\n        id\n        title\n      }\n      borrowDate\n      returnDate\n    }\n  }\n`;\n\nexport const DELETE_BOOK = gql`\n  mutation DeleteBook($id: ID!) {\n    deleteBook(id: $id) {\n      id\n    }\n  }\n`;\n\nexport const DELETE_USER = gql`\n  mutation DeleteUser($id: ID!) {\n    deleteUser(id: $id) {\n      id\n    }\n  }\n`;\n\nexport const DELETE_BORROWING = gql`\n  mutation DeleteBorrowing($id: ID!) {\n    deleteBorrowing(id: $id) {\n      id\n    }\n  }\n`;"],"mappings":"AAAA,SAASA,GAAG,QAAQ,gBAAgB;AAEpC,OAAO,MAAMC,SAAS,GAAGD,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAME,QAAQ,GAAGF,GAAG;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAMG,SAAS,GAAGH,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAMI,QAAQ,GAAGJ,GAAG;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAMK,cAAc,GAAGL,GAAG;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAID,OAAO,MAAMM,QAAQ,GAAGN,GAAG;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAMO,QAAQ,GAAGP,GAAG;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAMQ,aAAa,GAAGR,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAMS,WAAW,GAAGT,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAMU,WAAW,GAAGV,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAMW,gBAAgB,GAAGX,GAAG;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAMY,WAAW,GAAGZ,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAMa,WAAW,GAAGb,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAMc,gBAAgB,GAAGd,GAAG;AACnC;AACA;AACA;AACA;AACA;AACA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}